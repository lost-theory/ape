:mod:`ape.api.config`
=====================

.. py:module:: ape.api.config




.. raw:: html

   <h3>Module Contents</h3>

**Classes**:

.. autoapisummary::

   ape.api.config.ConfigEnum
   ape.api.config.ConfigItem
   ape.api.config.ConfigDict





-----------


.. py:class:: ConfigEnum

   Bases: :py:obj:`str`, :py:obj:`enum.Enum`

   str(object='') -> str
   str(bytes_or_buffer[, encoding[, errors]]) -> str

   Create a new string object from the given object. If encoding or
   errors is specified, then the object must expose a data buffer
   that will be decoded using the given encoding and error handler.
   Otherwise, returns the result of object.__str__() (if defined)
   or repr(object).
   encoding defaults to sys.getdefaultencoding().
   errors defaults to 'strict'.




.. py:class:: ConfigItem

   Each plugin must inherit from this Config base class

   .. py:method:: serialize(self) -> Dict


   .. py:method:: validate_config(self)


   .. py:method:: __getitem__(self, attrname: str) -> Any





.. py:class:: ConfigDict

   Bases: :py:obj:`ConfigItem`

   Each plugin must inherit from this Config base class

   .. py:method:: __post_init__(self)




