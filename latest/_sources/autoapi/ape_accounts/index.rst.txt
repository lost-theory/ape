:mod:`ape_accounts`
===================

.. py:module:: ape_accounts



.. raw:: html

   <h3>Submodules</h3>

.. toctree::
   :titlesonly:
   :maxdepth: 1

   _cli/index.rst
   accounts/index.rst




.. raw:: html

   <h3>Package Contents</h3>

**Classes**:

.. autoapisummary::

   ape_accounts.AccountContainer
   ape_accounts.KeyfileAccount



**Functions**:

.. autoapisummary::

   ape_accounts.account_types




-----------


.. py:class:: AccountContainer

   Bases: :py:obj:`ape.api.AccountContainerAPI`

   .. py:method:: _keyfiles(self) -> Iterator[pathlib.Path]
      :property:


   .. py:method:: aliases(self) -> Iterator[str]
      :property:


   .. py:method:: __len__(self) -> int


   .. py:method:: __iter__(self) -> Iterator[ape.api.AccountAPI]





.. py:class:: KeyfileAccount

   Bases: :py:obj:`ape.api.AccountAPI`

   .. attribute:: _keyfile
      :annotation: :pathlib.Path

      

   .. py:method:: __post_init__(self)


   .. py:method:: alias(self) -> str
      :property:

      Override with whatever alias might want to use, if applicable


   .. py:method:: keyfile(self) -> dict
      :property:


   .. py:method:: address(self) -> ape.types.AddressType
      :property:


   .. py:method:: __key(self) -> eth_account.Account
      :property:


   .. py:method:: unlock(self)


   .. py:method:: lock(self)


   .. py:method:: change_password(self)


   .. py:method:: delete(self)


   .. py:method:: sign_message(self, msg: eth_account.messages.SignableMessage) -> Optional[eth_account.datastructures.SignedMessage]


   .. py:method:: sign_transaction(self, txn: ape.api.TransactionAPI) -> Optional[eth_account.datastructures.SignedTransaction]





.. py:function:: account_types()



